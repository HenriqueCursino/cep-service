// Code generated by MockGen. DO NOT EDIT.
// Source: api/service/cep.go

// Package mock is a generated GoMock package.
package mock

import (
	response "cep-service/api/response"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCepService is a mock of CepService interface.
type MockCepService struct {
	ctrl     *gomock.Controller
	recorder *MockCepServiceMockRecorder
}

// MockCepServiceMockRecorder is the mock recorder for MockCepService.
type MockCepServiceMockRecorder struct {
	mock *MockCepService
}

// NewMockCepService creates a new mock instance.
func NewMockCepService(ctrl *gomock.Controller) *MockCepService {
	mock := &MockCepService{ctrl: ctrl}
	mock.recorder = &MockCepServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCepService) EXPECT() *MockCepServiceMockRecorder {
	return m.recorder
}

// GetFirstAddress mocks base method.
func (m *MockCepService) GetFirstAddress(cep string) (*response.GetAddressByCepResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFirstAddress", cep)
	ret0, _ := ret[0].(*response.GetAddressByCepResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFirstAddress indicates an expected call of GetFirstAddress.
func (mr *MockCepServiceMockRecorder) GetFirstAddress(cep interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFirstAddress", reflect.TypeOf((*MockCepService)(nil).GetFirstAddress), cep)
}
